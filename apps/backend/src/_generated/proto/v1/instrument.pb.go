// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.2
// source: proto/v1/instrument.proto

package proto_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Instrument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Family        string                 `protobuf:"bytes,4,opt,name=family,proto3" json:"family,omitempty"`
	Subfamily     string                 `protobuf:"bytes,5,opt,name=subfamily,proto3" json:"subfamily,omitempty"`
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Instrument) Reset() {
	*x = Instrument{}
	mi := &file_proto_v1_instrument_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instrument) ProtoMessage() {}

func (x *Instrument) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_instrument_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instrument.ProtoReflect.Descriptor instead.
func (*Instrument) Descriptor() ([]byte, []int) {
	return file_proto_v1_instrument_proto_rawDescGZIP(), []int{0}
}

func (x *Instrument) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Instrument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instrument) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Instrument) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *Instrument) GetSubfamily() string {
	if x != nil {
		return x.Subfamily
	}
	return ""
}

func (x *Instrument) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetInstrumentsRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	InstrumentType      string                 `protobuf:"bytes,1,opt,name=instrument_type,json=instrumentType,proto3" json:"instrument_type,omitempty"`
	InstrumentFamily    string                 `protobuf:"bytes,2,opt,name=instrument_family,json=instrumentFamily,proto3" json:"instrument_family,omitempty"`
	InstrumentSubfamily string                 `protobuf:"bytes,3,opt,name=instrument_subfamily,json=instrumentSubfamily,proto3" json:"instrument_subfamily,omitempty"`
	Tags                []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	SearchQuery         *string                `protobuf:"bytes,5,opt,name=search_query,json=searchQuery,proto3,oneof" json:"search_query,omitempty"`
	SortBy              *string                `protobuf:"bytes,6,opt,name=sort_by,json=sortBy,proto3,oneof" json:"sort_by,omitempty"`
	Ascending           *bool                  `protobuf:"varint,7,opt,name=ascending,proto3,oneof" json:"ascending,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetInstrumentsRequest) Reset() {
	*x = GetInstrumentsRequest{}
	mi := &file_proto_v1_instrument_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstrumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentsRequest) ProtoMessage() {}

func (x *GetInstrumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_instrument_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentsRequest.ProtoReflect.Descriptor instead.
func (*GetInstrumentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_instrument_proto_rawDescGZIP(), []int{1}
}

func (x *GetInstrumentsRequest) GetInstrumentType() string {
	if x != nil {
		return x.InstrumentType
	}
	return ""
}

func (x *GetInstrumentsRequest) GetInstrumentFamily() string {
	if x != nil {
		return x.InstrumentFamily
	}
	return ""
}

func (x *GetInstrumentsRequest) GetInstrumentSubfamily() string {
	if x != nil {
		return x.InstrumentSubfamily
	}
	return ""
}

func (x *GetInstrumentsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetInstrumentsRequest) GetSearchQuery() string {
	if x != nil && x.SearchQuery != nil {
		return *x.SearchQuery
	}
	return ""
}

func (x *GetInstrumentsRequest) GetSortBy() string {
	if x != nil && x.SortBy != nil {
		return *x.SortBy
	}
	return ""
}

func (x *GetInstrumentsRequest) GetAscending() bool {
	if x != nil && x.Ascending != nil {
		return *x.Ascending
	}
	return false
}

type GetInstrumentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instruments   []*Instrument          `protobuf:"bytes,1,rep,name=instruments,proto3" json:"instruments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInstrumentsResponse) Reset() {
	*x = GetInstrumentsResponse{}
	mi := &file_proto_v1_instrument_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstrumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentsResponse) ProtoMessage() {}

func (x *GetInstrumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_instrument_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentsResponse.ProtoReflect.Descriptor instead.
func (*GetInstrumentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_instrument_proto_rawDescGZIP(), []int{2}
}

func (x *GetInstrumentsResponse) GetInstruments() []*Instrument {
	if x != nil {
		return x.Instruments
	}
	return nil
}

var File_proto_v1_instrument_proto protoreflect.FileDescriptor

var file_proto_v1_instrument_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x8e, 0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x22, 0xc8, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x12, 0x31, 0x0a, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x75, 0x62, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x66, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x02, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x88, 0x01,
	0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x5b, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x7e, 0x0a, 0x11, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2c, 0x5a, 0x2a, 0x72, 0x6f, 0x63,
	0x6b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x5f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_instrument_proto_rawDescOnce sync.Once
	file_proto_v1_instrument_proto_rawDescData = file_proto_v1_instrument_proto_rawDesc
)

func file_proto_v1_instrument_proto_rawDescGZIP() []byte {
	file_proto_v1_instrument_proto_rawDescOnce.Do(func() {
		file_proto_v1_instrument_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_instrument_proto_rawDescData)
	})
	return file_proto_v1_instrument_proto_rawDescData
}

var file_proto_v1_instrument_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_v1_instrument_proto_goTypes = []any{
	(*Instrument)(nil),             // 0: proto.v1.instrument.Instrument
	(*GetInstrumentsRequest)(nil),  // 1: proto.v1.instrument.GetInstrumentsRequest
	(*GetInstrumentsResponse)(nil), // 2: proto.v1.instrument.GetInstrumentsResponse
}
var file_proto_v1_instrument_proto_depIdxs = []int32{
	0, // 0: proto.v1.instrument.GetInstrumentsResponse.instruments:type_name -> proto.v1.instrument.Instrument
	1, // 1: proto.v1.instrument.InstrumentService.GetInstruments:input_type -> proto.v1.instrument.GetInstrumentsRequest
	2, // 2: proto.v1.instrument.InstrumentService.GetInstruments:output_type -> proto.v1.instrument.GetInstrumentsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_v1_instrument_proto_init() }
func file_proto_v1_instrument_proto_init() {
	if File_proto_v1_instrument_proto != nil {
		return
	}
	file_proto_v1_instrument_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_instrument_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_instrument_proto_goTypes,
		DependencyIndexes: file_proto_v1_instrument_proto_depIdxs,
		MessageInfos:      file_proto_v1_instrument_proto_msgTypes,
	}.Build()
	File_proto_v1_instrument_proto = out.File
	file_proto_v1_instrument_proto_rawDesc = nil
	file_proto_v1_instrument_proto_goTypes = nil
	file_proto_v1_instrument_proto_depIdxs = nil
}
